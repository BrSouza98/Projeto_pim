// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto_pimWEB.Data;

#nullable disable

namespace Projeto_pimWEB.Migrations
{
    [DbContext(typeof(myDbContext))]
    [Migration("20231007163430_CreatDatabase")]
    partial class CreatDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.22");

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Beneficio", b =>
                {
                    b.Property<int>("id_cod_Ben")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Folha_Pagamentoid_cod_FP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Funcionarioid_cod_func")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome_Ben")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("valor")
                        .HasColumnType("REAL");

                    b.HasKey("id_cod_Ben");

                    b.HasIndex("Folha_Pagamentoid_cod_FP");

                    b.HasIndex("Funcionarioid_cod_func");

                    b.ToTable("beneficios");
                });

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Dependente", b =>
                {
                    b.Property<int>("id_cod_dep")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("funcionarioid_cod_func")
                        .HasColumnType("INTEGER");

                    b.HasKey("id_cod_dep");

                    b.HasIndex("funcionarioid_cod_func");

                    b.ToTable("dependentes");
                });

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Desconto", b =>
                {
                    b.Property<int>("id_cod_des")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Folha_Pagamentoid_cod_FP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Funcionarioid_cod_func")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome_des")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("id_cod_des");

                    b.HasIndex("Folha_Pagamentoid_cod_FP");

                    b.HasIndex("Funcionarioid_cod_func");

                    b.ToTable("descontos");
                });

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Folha_Pagamento", b =>
                {
                    b.Property<int>("id_cod_FP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("TEXT");

                    b.Property<float>("DiasTrabalhados")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("MesRef")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeFunc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("id_cod_func")
                        .HasColumnType("INTEGER");

                    b.HasKey("id_cod_FP");

                    b.HasIndex("id_cod_func");

                    b.ToTable("folha_pagamento");
                });

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Funcionario", b =>
                {
                    b.Property<int>("id_cod_func")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CTPS")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("CargaHoraria")
                        .HasColumnType("REAL");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Formacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PIS")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SalarioBruto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoneR")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("TemAcesso")
                        .HasColumnType("INTEGER");

                    b.HasKey("id_cod_func");

                    b.ToTable("funcionarios");
                });

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Beneficio", b =>
                {
                    b.HasOne("Projeto_pimWEB.Models.Classes.Folha_Pagamento", "Folha_Pagamento")
                        .WithMany("Beneficios")
                        .HasForeignKey("Folha_Pagamentoid_cod_FP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_pimWEB.Models.Classes.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("Funcionarioid_cod_func")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folha_Pagamento");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Dependente", b =>
                {
                    b.HasOne("Projeto_pimWEB.Models.Classes.Funcionario", "funcionario")
                        .WithMany("dependentes")
                        .HasForeignKey("funcionarioid_cod_func")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Desconto", b =>
                {
                    b.HasOne("Projeto_pimWEB.Models.Classes.Folha_Pagamento", "Folha_Pagamento")
                        .WithMany("Descontos")
                        .HasForeignKey("Folha_Pagamentoid_cod_FP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_pimWEB.Models.Classes.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("Funcionarioid_cod_func")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folha_Pagamento");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Folha_Pagamento", b =>
                {
                    b.HasOne("Projeto_pimWEB.Models.Classes.Funcionario", "Funcionario")
                        .WithMany("Folhas")
                        .HasForeignKey("id_cod_func")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Folha_Pagamento", b =>
                {
                    b.Navigation("Beneficios");

                    b.Navigation("Descontos");
                });

            modelBuilder.Entity("Projeto_pimWEB.Models.Classes.Funcionario", b =>
                {
                    b.Navigation("Folhas");

                    b.Navigation("dependentes");
                });
#pragma warning restore 612, 618
        }
    }
}
